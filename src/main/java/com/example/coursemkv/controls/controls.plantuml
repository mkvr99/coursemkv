@startuml

title __CONTROLS's Class Diagram__\n

  namespace  {
    namespace om.example.coursemkv {
      namespace controls {
        class com.example.coursemkv.controls.AdminControl {
            + admin_click : TableColumn<Messages, Integer>
            + endbutton : Button
            + geoimage : ImageView
            + id_mail : TableColumn<Messages, Integer>
            + id_users : TableColumn<Messages, Integer>
            + listmail : TableView<Messages>
            + load_button : Button
            + okbutton : Button
            + status : TableColumn<Messages, String>
            + text : TableColumn<Messages, String>
            + user_click : TableColumn<Messages, String>
            ~ col1 : TableColumn
            ~ col2 : TableColumn
            ~ col3 : TableColumn
            ~ col4 : TableColumn
            ~ col5 : TableColumn
            ~ observableListMessages : ObservableList<Messages>
            ~ ñol0 : TableColumn
            + deletemail()
            + end()
            + end_message()
            + initialize()
            + load_button()
            + setAdmin()
            + setDb()
            + setMessages()
            + start()
            + updateInf()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.coursemkv {
      namespace controls {
        class com.example.coursemkv.controls.HelloController {
            - admin_box : CheckBox
            - login_field : TextField
            - password_field : TextField
            - reg : Button
            - user_box : CheckBox
            - welcomelabel : Label
            + enter()
            + reg()
            + setDb()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.coursemkv {
      namespace controls {
        class com.example.coursemkv.controls.SignUpController {
            - admin_box : CheckBox
            - login_field : TextField
            - password_field : TextField
            - reg : Button
            - user_box : CheckBox
            - welcomelabel : Label
            + reg()
            + setDb()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.coursemkv {
      namespace controls {
        class com.example.coursemkv.controls.UserControl {
            + close_button : Button
            + end_message : Button
            + geoimage : ImageView
            + label_default : Label
            + label_status : Label
            + load_button : Button
            + send_button : Button
            + text_mail : TextArea
            + close()
            + end_message()
            + load_button()
            + send()
            + setDb()
            + setUser()
        }
      }
    }
  }
  

  com.example.coursemkv.controls.AdminControl .up.|> javafx.fxml.Initializable
  com.example.coursemkv.controls.AdminControl o-- com.example.coursemkv.model.Admin : admin
  com.example.coursemkv.controls.AdminControl o-- com.example.coursemkv.model.JDBCPostgreSQL : db
  com.example.coursemkv.controls.AdminControl o-- com.example.coursemkv.model.Messages : messages
  com.example.coursemkv.controls.HelloController o-- com.example.coursemkv.model.Admin : admin
  com.example.coursemkv.controls.HelloController o-- com.example.coursemkv.model.JDBCPostgreSQL : db
  com.example.coursemkv.controls.SignUpController o-- com.example.coursemkv.model.JDBCPostgreSQL : db
  com.example.coursemkv.controls.UserControl o-- com.example.coursemkv.model.Messages : messages
  com.example.coursemkv.controls.UserControl o-- com.example.coursemkv.model.JDBCPostgreSQL : db
  com.example.coursemkv.controls.UserControl o-- com.example.coursemkv.model.User : user


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
